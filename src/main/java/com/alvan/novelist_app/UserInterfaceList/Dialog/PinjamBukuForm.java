/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.alvan.novelist_app.UserInterfaceList.Dialog;

import com.alvan.novelist_app.Database.BukuClass;
import com.alvan.novelist_app.Database.KoneksiDatabase;
import com.alvan.novelist_app.Database.SessionLogin;
import com.alvan.novelist_app.UserInterfaceList.DashboardPage;
import com.alvan.novelist_app.UserInterfaceList.ListPeminjamanPage;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Calendar;
import java.sql.Statement;
/**
 *
 * @author Nitro 5
 */
public class PinjamBukuForm extends javax.swing.JFrame {
    public static Integer idBukuPinjam;

    public PinjamBukuForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Pinjam Buku");
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setFormPinjam();
    }

    public  static void setBukuPinjam(Integer idBuku){
        idBukuPinjam = idBuku;
    }

    public static Integer getBukuPinjam(){
        return idBukuPinjam;
    }


    /**
     * Creates new form PinjamBukuForm
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PaneilMainPinjam = new javax.swing.JPanel();
        Panel2MainPinjam = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPinjamJudulBuku = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHargaPinjam = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPinjamMinggu = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPinjamTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        BtnPinjamBukuClose = new javax.swing.JButton();
        BtnPinjamBukuSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        PaneilMainPinjam.setBackground(new java.awt.Color(255, 255, 255));
        PaneilMainPinjam.setPreferredSize(new java.awt.Dimension(900, 600));
        PaneilMainPinjam.setLayout(null);

        Panel2MainPinjam.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(231, 146, 21));
        jLabel1.setText("Form Peminjaman Buku");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Judul Buku");

        txtPinjamJudulBuku.setEditable(false);
        txtPinjamJudulBuku.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Harga Pinjam / Minggu");

        txtHargaPinjam.setEditable(false);
        txtHargaPinjam.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Lama Pinjam Dalam Minggu");

        txtPinjamMinggu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtPinjamMinggu.setForeground(new java.awt.Color(231, 146, 21));
        txtPinjamMinggu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPinjamMingguFocusLost(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(231, 146, 21));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(231, 146, 21));
        jLabel5.setText("Minggu");

        txtPinjamTotal.setEditable(false);
        txtPinjamTotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Total Harga Bayar");

        BtnPinjamBukuClose.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnPinjamBukuClose.setForeground(new java.awt.Color(102, 102, 102));
        BtnPinjamBukuClose.setText("Batalkan");
        BtnPinjamBukuClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnPinjamBukuCloseMouseClicked(evt);
            }
        });

        BtnPinjamBukuSave.setBackground(new java.awt.Color(231, 146, 21));
        BtnPinjamBukuSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnPinjamBukuSave.setForeground(new java.awt.Color(255, 255, 255));
        BtnPinjamBukuSave.setText("Pinjam Buku");
        BtnPinjamBukuSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnPinjamBukuSaveMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Panel2MainPinjamLayout = new javax.swing.GroupLayout(Panel2MainPinjam);
        Panel2MainPinjam.setLayout(Panel2MainPinjamLayout);
        Panel2MainPinjamLayout.setHorizontalGroup(
            Panel2MainPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel2MainPinjamLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(264, 264, 264))
            .addGroup(Panel2MainPinjamLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(Panel2MainPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(txtPinjamJudulBuku)
                    .addComponent(txtHargaPinjam)
                    .addGroup(Panel2MainPinjamLayout.createSequentialGroup()
                        .addComponent(txtPinjamMinggu, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))
                    .addComponent(txtPinjamTotal)
                    .addGroup(Panel2MainPinjamLayout.createSequentialGroup()
                        .addComponent(BtnPinjamBukuClose, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnPinjamBukuSave, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        Panel2MainPinjamLayout.setVerticalGroup(
            Panel2MainPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel2MainPinjamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPinjamJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtHargaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel2MainPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPinjamMinggu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPinjamTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(Panel2MainPinjamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnPinjamBukuClose, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnPinjamBukuSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        PaneilMainPinjam.add(Panel2MainPinjam);
        Panel2MainPinjam.setBounds(70, 0, 740, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PaneilMainPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PaneilMainPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private  void setFormPinjam(){
        BukuClass bukuClass = BukuClass.getBookById(getBukuPinjam().toString());
        txtPinjamJudulBuku.setText(bukuClass.getJudul());
        txtHargaPinjam.setText(String.valueOf(bukuClass.getHargaPinjam()));
    }

    private void BtnPinjamBukuCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnPinjamBukuCloseMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BtnPinjamBukuCloseMouseClicked

    private void txtPinjamMingguFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPinjamMingguFocusLost
        // TODO add your handling code here:

        if (txtPinjamMinggu.getText().isEmpty() || txtPinjamMinggu.getText().equals("0") || !txtPinjamMinggu.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Isi Lama Pinjam Dengan Benar.");
            ResetFormPinjam();
            return;
        }

        Double hargaPinjam = Double.parseDouble(txtHargaPinjam.getText());
        Integer lamaPinjam = Integer.parseInt(txtPinjamMinggu.getText());

        Double SumtotalHarga = hargaPinjam * lamaPinjam.intValue();

        txtPinjamTotal.setText(Integer.toString(SumtotalHarga.intValue()));
        
        
    }//GEN-LAST:event_txtPinjamMingguFocusLost

    private void BtnPinjamBukuSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnPinjamBukuSaveMouseClicked
        Connection connection = KoneksiDatabase.getConnection();
        String lamaPinjam = txtPinjamMinggu.getText();
        String totalHarga = txtPinjamTotal.getText();
        String idBuku = getBukuPinjam().toString();
        String idMember = SessionLogin.getUid();
        Date currentDate = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyMMdd");
        SimpleDateFormat dateNow = new SimpleDateFormat("yy-MM-dd");
        String formattedDate = dateFormat.format(currentDate);
        String NoNota = "NOVL00M" + idMember +"B"+ idBuku+"T"+formattedDate;
        Integer addDays = (Integer.parseInt(txtPinjamMinggu.getText()) * 7);

        Calendar calendar = Calendar.getInstance();
        calendar.setTime(currentDate);
        calendar.add(Calendar.DAY_OF_MONTH, addDays);
        Date ResDays = calendar.getTime();
        String KembalikanDate = dateNow.format(ResDays);

        if (txtPinjamMinggu.getText().isEmpty() || txtPinjamMinggu.getText().equals("0") || !txtPinjamMinggu.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Isi Lama Pinjam Dengan Benar.");
            ResetFormPinjam();
            return;
        }

        if (Integer.parseInt(txtPinjamMinggu.getText()) > 4) {
            JOptionPane.showMessageDialog(null, "Maksimal Peminjaman 4 Minggu.");
            ResetFormPinjam();
            return;
        }


        try {
            PreparedStatement validationStatement1 = connection.prepareStatement(
                    "SELECT COUNT(*) FROM pinjaman " +
                            "WHERE member_id = ? AND tanggal_kembali IS NULL"
            );
            validationStatement1.setString(1, idMember);
            ResultSet validationResultSet1 = validationStatement1.executeQuery();

            if (validationResultSet1.next()) {
                int maxPinjam = validationResultSet1.getInt(1);

                if (maxPinjam >= 2) {
                    JOptionPane.showMessageDialog(null, "Anda belum mengembalikan buku yang dipinjam sebelumnya.");
                    return;
                }
            }

            PreparedStatement validationStatement2 = connection.prepareStatement(
                    "SELECT COUNT(*) FROM pinjaman " +
                            "WHERE member_id = ? AND buku_id = ? AND tanggal_kembali IS NULL"
            );
            validationStatement2.setString(1, idMember);
            validationStatement2.setString(2, idBuku);
            ResultSet validationResultSet2 = validationStatement2.executeQuery();

            if (validationResultSet2.next()) {
                int pinjamanSama = validationResultSet2.getInt(1);

                if (pinjamanSama > 0) {
                    JOptionPane.showMessageDialog(null, "Anda sudah meminjam buku yang sama dan belum mengembalikannya.");
                    return;
                }
            }


            PreparedStatement preparedStatement1 = connection.prepareStatement("INSERT INTO pinjaman (member_id, buku_id, tanggal_pinjam, kembalikan_sebelum, lama_pinjam, created_at) VALUES (?,?,?,?,?,?)", Statement.RETURN_GENERATED_KEYS);
            preparedStatement1.setString(1, idMember);
            preparedStatement1.setString(2, idBuku);
            preparedStatement1.setString(3, dateNow.format(currentDate));
            preparedStatement1.setString(4, KembalikanDate);
            preparedStatement1.setString(5, lamaPinjam);
            preparedStatement1.setString(6, dateNow.format(currentDate));
            preparedStatement1.executeUpdate();

            ResultSet generatedKeys = preparedStatement1.getGeneratedKeys();
            int pinjamanId = 0;
            if (generatedKeys.next()) {
                pinjamanId = generatedKeys.getInt(1);
            }

            PreparedStatement preparedStatement2 = connection.prepareStatement("INSERT INTO transaksi (nomor_nota, buku_id, pinjaman_id, jumlah, total_bayar,created_at) VALUES (?,?,?,?,?,?)");
            preparedStatement2.setString(1, NoNota);
            preparedStatement2.setString(2, idBuku);
            preparedStatement2.setInt(3, pinjamanId);
            preparedStatement2.setString(4, "1");
            preparedStatement2.setString(5, totalHarga);
            preparedStatement2.setString(6, dateNow.format(currentDate));

            preparedStatement2.executeUpdate();

            PreparedStatement updateBuku = connection.prepareStatement("UPDATE buku SET jumlah_stok = jumlah_stok - 1 WHERE id = ?");
            updateBuku.setString(1, idBuku);
            updateBuku.executeUpdate();

            updateBuku.close();
            generatedKeys.close();
            preparedStatement1.close();
            preparedStatement2.close();
            connection.close();

            DefaultTableModel modelTabelListBuku = DashboardPage.DataListBukuTable();
            DashboardPage.TabelListBuku.setModel(modelTabelListBuku);


            JOptionPane.showMessageDialog(null, "Berhasil Pinjam Buku");
            this.dispose();

        }   catch (Exception e) {
            e.printStackTrace();

        }

    }//GEN-LAST:event_BtnPinjamBukuSaveMouseClicked

    public void ResetFormPinjam(){
        txtPinjamMinggu.setText("");
        txtPinjamTotal.setText("");
    }
        /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PinjamBukuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PinjamBukuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PinjamBukuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PinjamBukuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PinjamBukuForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnPinjamBukuClose;
    private javax.swing.JButton BtnPinjamBukuSave;
    private javax.swing.JPanel PaneilMainPinjam;
    private javax.swing.JPanel Panel2MainPinjam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtHargaPinjam;
    private javax.swing.JTextField txtPinjamJudulBuku;
    private javax.swing.JTextField txtPinjamMinggu;
    private javax.swing.JTextField txtPinjamTotal;
    // End of variables declaration//GEN-END:variables
}
